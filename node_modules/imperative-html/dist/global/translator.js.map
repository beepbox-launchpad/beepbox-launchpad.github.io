{"version":3,"file":"translator.js","sources":["../../src/translator.ts"],"sourcesContent":["// Copyright (C) John Nesky, distributed under the MIT license.\n\n// Simplified, but covers most cases I care about:\nconst validJavascriptIdentifier: RegExp = /^[a-z][a-zA-z0-9_]*$/;\n\nconst reservedJavascriptIdentifiers: {[key: string]: boolean} = {\"abstract\": true, \"arguments\": true, \"await\": true, \"boolean\": true, \"break\": true, \"byte\": true, \"case\": true, \"catch\": true, \"char\": true, \"class\": true, \"const\": true, \"continue\": true, \"debugger\": true, \"default\": true, \"delete\": true, \"do\": true, \"double\": true, \"else\": true, \"enum\": true, \"eval\": true, \"export\": true, \"extends\": true, \"false\": true, \"final\": true, \"finally\": true, \"float\": true, \"for\": true, \"function\": true, \"goto\": true, \"if\": true, \"implements\": true, \"import\": true, \"in\": true, \"instanceof\": true, \"int\": true, \"interface\": true, \"let\": true, \"long\": true, \"native\": true, \"new\": true, \"null\": true, \"package\": true, \"private\": true, \"protected\": true, \"public\": true, \"return\": true, \"short\": true, \"static\": true, \"super\": true, \"switch\": true, \"synchronized\": true, \"this\": true, \"throw\": true, \"throws\": true, \"transient\": true, \"true\": true, \"try\": true, \"typeof\": true, \"var\": true, \"void\": true, \"volatile\": true, \"while\": true, \"with\": true, \"yield\": true};\n\n// Converts a text node to a string, trimming away leading and trailing whitespace.\n// If the string contains tabs or newlines, wrap it in backticks, otherwise double quotes,\n// and escape the contents appropriately. \n// Returns null for nodes that are entirely whitespace.\nfunction convertTextNode(node: Node): (string | null) {\n\tlet value: string = node.nodeValue!;\n\tif (/^\\s+$/.test(value)) return null; // skip whitespace nodes.\n\tvalue = value.replace(/^(\\t|\\n|  )+/, \"\").replace(/\\s+$/, \" \");\n\tif (/[\\t\\n]/.test(value)) {\n\t\treturn \"`\" + value.replace(/`/g, \"\\\\`\").replace(/\\$\\{/g, \"\\\\${\") + \"`\";\n\t} else {\n\t\treturn JSON.stringify(value);\n\t}\n}\n\n// Recursively converts an element and all of its contents to a string of JavaScript code\n// that would generate the same element hierarchy if executed. Attempts to format the code\n// as a human might, collapsing functions with a single argument onto a single line but\n// spreading more complex arguments across multiple indented lines using the provided\n// indentType string.\nfunction convertElementsRecursively(node: Element, indentLevel: number, indentType: string): string {\n\tlet indentation = \"\"; // indentType.repeat(indentLevel) doesn't work in Internet Explorer...\n\tfor (let i: number = 0; i < indentLevel; i++) indentation += indentType;\n\t\n\tlet result: string = indentation;\n\tif (node instanceof HTMLElement) {\n\t\tresult += \"HTML\";\n\t\tconst elementName: string = node.tagName.toLowerCase();\n\t\tconst camelCaseName: string = elementName.replace(/-[a-z]/, (c) => c.slice(1).toUpperCase()).replace(/-/g, \"_\");\n\t\tconst validIdentifier: boolean = validJavascriptIdentifier.test(camelCaseName) && !reservedJavascriptIdentifiers[camelCaseName];\n\t\tresult += validIdentifier ? (\".\" + camelCaseName) : (\"[\" + JSON.stringify(elementName) + \"]\");\n\t} else if (node instanceof SVGElement) {\n\t\tresult += \"SVG\";\n\t\tconst elementName: string = node.tagName;\n\t\tconst snakeCaseName: string = elementName.replace(/-/g, \"_\");\n\t\tconst validIdentifier: boolean = validJavascriptIdentifier.test(snakeCaseName) && !reservedJavascriptIdentifiers[snakeCaseName];\n\t\tresult += validIdentifier ? (\".\" + snakeCaseName) : (\"[\" + JSON.stringify(elementName) + \"]\");\n\t} else {\n\t\treturn indentation + \"<Unrecognized node type>,\\n\";\n\t}\n\t\n\tconst attributes: string[] = [];\n\tif (node.attributes.length > 0) {\n\t\t//for (const attribute of node.attributes) { // not backwards compatible with Internet Explorer.\n\t\tfor (let i: number = 0; i < node.attributes.length; i++) { const attribute = node.attributes[i];\n\t\t\tif (!attribute.specified) continue;\n\t\t\tlet name: string = attribute.name;\n\t\t\tif (!validJavascriptIdentifier.test(name)) name = JSON.stringify(name);\n\t\t\tlet value: string = attribute.value;\n\t\t\tif (value === \"\") {\n\t\t\t\tvalue = \"true\";\n\t\t\t} else if (isNaN(<any>value) || String(parseFloat(value)) !== value) {\n\t\t\t\tvalue = JSON.stringify(value);\n\t\t\t}\n\t\t\tattributes.push(name + \": \" + value);\n\t\t}\n\t}\n\tconst hasAttributes: boolean = attributes.length > 0;\n\t\n\tconst children: string[] = [];\n\tlet collapseChildren: boolean = false;\n\t//for (const child of node.childNodes) { // not backwards compatible with Internet Explorer.\n\tfor (let i: number = 0; i < node.childNodes.length; i++) { const child = node.childNodes[i];\n\t\tif (child instanceof Text) {\n\t\t\tconst text = convertTextNode(child);\n\t\t\tif (text != null) {\n\t\t\t\tif (!hasAttributes && node.childNodes.length === 1 && !/[\\n]/.test(text)) {\n\t\t\t\t\tchildren.push(text);\n\t\t\t\t\t// Don't add whitespace around single text node child:\n\t\t\t\t\tcollapseChildren = true;\n\t\t\t\t} else {\n\t\t\t\t\t// Put text node on its own indented line followed by a comma.\n\t\t\t\t\tchildren.push(indentation + indentType + text + \",\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (child instanceof Element) {\n\t\t\tchildren.push(convertElementsRecursively(child, indentLevel + 1, indentType));\n\t\t}\n\t}\n\tconst hasChildren: boolean = children.length > 0;\n\t\n\tresult += \"(\";\n\tif (hasAttributes) {\n\t\tresult += \"{\" + attributes.join(\", \") + \"}\";\n\t\tif (hasChildren) result += \",\";\n\t}\n\tif (collapseChildren) {\n\t\tresult += children.join(\"\");\n\t} else if (hasChildren) {\n\t\tresult += \"\\n\" + children.join(\"\") + indentation;\n\t}\n\tresult += \")\";\n\treturn result + \",\\n\";\n}\n\n/**\n * Converts an element and all of its contents to a string of JavaScript code that would\n * generate the same element hierarchy if executed using the imperative-html library,\n * attempting to format the code as a human might. The first argument can be an instantiated\n * element or a string of HTML code. There is an optional second argument to set the indentation\n * type; it defaults to a tab character but you may wish to set it to spaces. \n */\nexport function translateElementsToImperativeCode(node: Node, indentType: string = \"\\t\"): string {\n\tif (typeof node === \"string\") node = document.createRange().createContextualFragment(node);\n\tlet result = \"\";\n\tif (node instanceof DocumentFragment) {\n\t\t//for (const child of node.childNodes) { // not backwards compatible with Internet Explorer.\n\t\tfor (let i: number = 0; i < node.childNodes.length; i++) { const child = node.childNodes[i];\n\t\t\tif (child instanceof Text) {\n\t\t\t\tconst text = convertTextNode(child);\n\t\t\t\tif (text != null) result += text + \",\\n\";\n\t\t\t} else if (child instanceof Element) {\n\t\t\t\tresult += convertElementsRecursively(child, 0, indentType);\n\t\t\t}\n\t\t}\n\t} else if (node instanceof Text) {\n\t\tconst text = convertTextNode(node);\n\t\tif (text != null) result += text + \",\\n\";\n\t} else if (node instanceof Element) {\n\t\tresult += convertElementsRecursively(node, 0, indentType);\n\t}\n\treturn result.replace(/,\\n$/, \"\");\n}\n"],"names":[],"mappings":"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"}